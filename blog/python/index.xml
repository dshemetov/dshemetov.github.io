<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on ┐｜･ิω･ิ#｜┌ Dmitry's Online Webpage</title><link>https://dshemetov.github.io/blog/python/</link><description>Recent content in python on ┐｜･ิω･ิ#｜┌ Dmitry's Online Webpage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © 2023</copyright><lastBuildDate>Sat, 15 Apr 2023 17:50:38 -0800</lastBuildDate><atom:link href="https://dshemetov.github.io/blog/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Fast Python</title><link>https://dshemetov.github.io/fast-python/</link><pubDate>Sat, 15 Apr 2023 17:50:38 -0800</pubDate><guid>https://dshemetov.github.io/fast-python/</guid><description>I recently got to work on making fast Python code. I put together an IPython notebook highlighting some things I learned. Topics include NumPy, Cython, and Numba.</description></item><item><title>Python Project Structures</title><link>https://dshemetov.github.io/python-project-structures/</link><pubDate>Fri, 02 Sep 2022 17:29:37 -0700</pubDate><guid>https://dshemetov.github.io/python-project-structures/</guid><description>Python project structures are confusing. Let&amp;rsquo;s make them less so.
Terminology First, a few standard Python terminology definitions:
a module is a single Python script, a package is a collection of modules.1 A project may be an application or a library:
an application is a program that is meant to be deployed, such as a simple script, a server, or a Discord bot, a library is a package that will be imported by other libraries or applications.</description></item><item><title>Unicode, String Encodings, and Python</title><link>https://dshemetov.github.io/unicode-string-encodings-and-python/</link><pubDate>Thu, 01 Sep 2022 11:20:59 -0700</pubDate><guid>https://dshemetov.github.io/unicode-string-encodings-and-python/</guid><description>I&amp;rsquo;ve been working on the cryptopals challenges and avoiding stock libraries, to learn more about string encodings and the bytes type in Python 3. So here, we&amp;rsquo;ll learn way more than we need to know about Unicode.
Text as Unicode Strings To work with text data, computers need to work with many different types of characters. From all the world&amp;rsquo;s languages to symbols to emojis, the list goes on. Unicode1 is a specification that aims to give every character used in human texts its own unique and standard code.</description></item></channel></rss>